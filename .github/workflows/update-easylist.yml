name: Update EasyList Daily

on:
  schedule:
    - cron: "0 22 * * *"  # 每天 UTC 22:00 运行
  workflow_dispatch:  # 支持手动触发

jobs:
  update-easylist:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT_TOKEN }}  # 明确指定 PAT_TOKEN

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Run EasyList update script
        run: python update_easylist.py

      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git add modified_easylist.txt
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update modified EasyList $(date -u)"
            git push origin main
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}  # 使用 PAT_TOKEN 进行 push

  update-blacklist:
    runs-on: ubuntu-latest
    needs: update-easylist  # 在 update-easylist 成功完成后才开始运行
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT_TOKEN }}

      - name: Set up Python for blacklist script
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies for blacklist script
        run: |
          python -m pip install --upgrade pip
          pip install requests

      # Step 1: 在生成文件前，先拉取最新更改，确保工作目录与远程仓库同步。
      - name: Pull latest changes
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git add "optimized_blacklist.conf"  # 确保文件名正确
          git pull origin main --rebase

      - name: Run Blacklist update script
        run: python update_blacklist_config.py
      
      - name: Commit and push blacklist changes
        run: |
          if git diff --staged --quiet; then
            echo "No changes to commit for blacklist"
          else
            git commit -m "Update blacklist config $(date -u)"
            git push origin main
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
